name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  tests:
    name: "Run tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extensions: ["scoutapm", ""]
        twig-version:
          - "2.*"
          - "3.*"
        symfony-version:
          - "4.*"
          - "5.*"
        php-version:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
        exclude:
          - {php-version: "7.1", symfony-version: "5.*", "twig-version": "2.*"} # Symfony 5 (with Twig 2) requires 7.2+
          - {php-version: "7.1", symfony-version: "5.*", "twig-version": "3.*"} # Symfony 5 (with Twig 3) requires 7.2+
          - {php-version: "7.1", symfony-version: "4.*", "twig-version": "3.*"} # Twig 3 (on Symfony 4) requires 7.2+
    steps:
      - uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          tools: pecl
          extensions: ${{ matrix.extensions }}
      # --no-update then a full `composer update` is needed to overcome locked dependencies
      # See: https://github.com/composer/composer/issues/9561
      - name: "Require Symfony version ${{ matrix.symfony-version }}, Twig version ${{ matrix.twig-version }}"
        run: "composer require symfony/symfony:${{ matrix.symfony-version }} twig/twig:${{ matrix.twig-version }} symfony/orm-pack:^2.0 symfony/twig-pack:^1.0 --no-update --no-interaction --no-progress --prefer-dist --prefer-stable"
      - name: "Composer update"
        run: "composer update --no-interaction --no-progress --prefer-dist --prefer-stable"
      - name: "Run PHPUnit test suite"
        run: "vendor/bin/phpunit"

  cs:
    name: "Check coding standards"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "7.4"
      - name: "Install dependencies"
        run: "composer install"
      - name: "Run PHP_CodeSniffer"
        run: "vendor/bin/phpcs"

  static-analysis:
    name: "Perform static analysis"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "7.4"
      - name: "Install dependencies"
        run: "composer install"
      - name: "Run Psalm"
        run: "vendor/bin/psalm"
